name: Deployment Workflow

on:
  release:
    types:
      - published

jobs:

  # web:
  #   name: Build Web
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Repo
  #       uses: actions/checkout@v2
  #     - name: Deploy To Vercel Production
  #       uses: amondnet/vercel-action@v19
  #       with:
  #         vercel-token: ${{ secrets.VERCEL_TOKEN }}
  #         vercel-args: '--prod'
  #         vercel-org-id: ${{ secrets.ORG_ID}}
  #         vercel-project-id: ${{ secrets.PROJECT_ID}}
  #         working-directory: ./packages/app

  build:
    name: Build macOS
    runs-on: macos-latest
    defaults:
      run:
        shell: bash
    steps:

      # Get The Release Version Tag
      - name: Set Release Version
        run: echo ::set-env name=RELEASE_VERSION::${GITHUB_REF#refs/tags/}

      # Checkout The Repo Locally
      - name: Checkout Repo
        uses: actions/checkout@v2

      # Setup Env
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '12.14.1'

      # Install Dependencies
      - name: Install Dependencies
        run: yarn install

      # Build React App
      - name: Build React App
        run: yarn workspace app build

      # Build Electron App
      - name: Build Electron App
        run: yarn workspace desktop build

      # Package Electron App
      - name: Build Electron App
        run: yarn workspace desktop package

      # Get Asset Path
      - name: Get Asset Path
        id: get_asset_path
        run: |
          echo ::set-env name=ASSET_PATH::$(find packages/desktop/dist -type f -name "*.dmg")
          echo ::set-output name=asset_path::$ASSET_PATH

      # Get Asset Filename
      - name: Get Asset Name
        id: get_asset_name
        run: echo ::set-output name=asset_name::$(basename -- $ASSET_PATH)

      # Get Release Upload URL
      - name: Get Release
        id: get_release
        uses: bruceadams/get-release@v1.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload Asset To Release
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: ${{ steps.get_asset_path.outputs.asset_path }}
          asset_name: ${{ steps.get_asset_name.outputs.asset_name }}
          asset_content_type: application/x-apple-diskimage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}